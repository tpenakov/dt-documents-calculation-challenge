/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.3.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package design.technologies.api.generated.api;

import design.technologies.api.generated.model.CalculateResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-11-12T01:08:28.986611Z[Etc/UTC]")
@Validated
@Controller
@Tag(name = "api", description = "the api API")
public interface ApiApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /api/v1/sumInvoices : Sum the invoices in the document, using the provided output currencty and currency exchange rates.
     *
     * @param file The CSV file, containing a list of invoices, debit and credit notes in different currencies. (required)
     * @param exchangeRates A list of currencies and exchange rates (for example: EUR:1,USD:0.987,GBP:0.878)  (required)
     * @param outputCurrency  (required)
     * @param customerVat This the optional input filter. If specified, the result should contain only one customer matching the one specified in this filter.  (optional)
     * @return There are no results that match the provided customer filter. (status code 404)
     *         or The provided customer input is not valid and the operation cannot be performed. (status code 400)
     *         or Sum of all documents per customer. If the filter is used, only this customer will be included in the response. (status code 200)
     */
    @Operation(
        operationId = "sumInvoices",
        summary = "Sum the invoices in the document, using the provided output currencty and currency exchange rates.",
        responses = {
            @ApiResponse(responseCode = "404", description = "There are no results that match the provided customer filter."),
            @ApiResponse(responseCode = "400", description = "The provided customer input is not valid and the operation cannot be performed."),
            @ApiResponse(responseCode = "200", description = "Sum of all documents per customer. If the filter is used, only this customer will be included in the response.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CalculateResponse.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/sumInvoices",
        produces = { "application/json" },
        consumes = { "multipart/form-data" }
    )
    default ResponseEntity<CalculateResponse> sumInvoices(
        @Parameter(name = "file", description = "The CSV file, containing a list of invoices, debit and credit notes in different currencies.", required = true) @RequestPart(value = "file", required = true) MultipartFile file,
        @Parameter(name = "exchangeRates", description = "A list of currencies and exchange rates (for example: EUR:1,USD:0.987,GBP:0.878) ", required = true) @Valid @RequestParam(value = "exchangeRates", required = true) List<String> exchangeRates,
        @Parameter(name = "outputCurrency", description = "", required = true) @Valid @RequestParam(value = "outputCurrency", required = true) String outputCurrency,
        @Parameter(name = "customerVat", description = "This the optional input filter. If specified, the result should contain only one customer matching the one specified in this filter. ") @Valid @RequestParam(value = "customerVat", required = false) String customerVat
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"currency\" : \"currency\", \"customers\" : [ { \"balance\" : 0.8008281904610115, \"name\" : \"name\" }, { \"balance\" : 0.8008281904610115, \"name\" : \"name\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
